<!DOCTYPE html>
<html>

<head>
    <title>Web Dev Chat Rooms</title>
    <!-- Add any head elements like CSS files -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css">
    <style>
        /* Chat message styling */
        .message {
            padding: 10px;
            margin: 5px;
            border-radius: 5px;
        }

        .message.sent {
            background-color: #e0f7fa;
            /* Light blue for sent messages */
            text-align: right;
        }

        .message.received {
            background-color: #e0e0e0;
            /* Light gray for received messages */
        }
    </style>
</head>

<body>
    <h1>Welcome to Web Development Chat</h1>

    <!-- Room Selection -->
    <!-- Ensure Materialize classes are used -->
    <div class="input-field">
        <select id="roomSelect">
            <option value="" disabled selected>Choose your room</option>
            <option value="htmlCSS">HTML & CSS</option>
            <option value="javascript">JavaScript</option>
            <option value="node">Node.js & Express</option>
            <option value="mongo">MongoDB</option>
            <option value="react">React</option>
            <!-- ... other options ... -->
        </select>
        <label>Room Selection</label>
    </div>
    <button class="btn waves-effect waves-light" onclick="joinRoom()">Join Room</button>

    <!-- Chat Messages and Input -->
    <div id="chatBox"></div>
    <div id="typingIndicator"></div>
    <input type="text" id="messageInput" placeholder="Type a message..." oninput="emitTyping()">
    <button class="btn waves-effect waves-light blue" onclick="sendMessage()">Send</button>
    <button class="btn waves-effect waves-light red" onclick="leaveRoom()">Leave Room</button>

    <!-- Socket.IO Client -->
    <script src="/socket.io/socket.io.js"></script>
    <div id="username" style="display: none;">{{ name }}</div>
    <script>
        console.log(io); // Should log the io function if loaded correctly
        var socket = io();
        socket.on('connect', () => {
            console.log('Connected to the server');
        });

        var currentRoom = '';
        var name = document.getElementById('username').innerText;

        function joinRoom() {
            currentRoom = document.getElementById('roomSelect').value;
            if (currentRoom && name) {
                socket.emit('join', { room: currentRoom, name: name });
                console.log(`Attempting to join room: ${currentRoom} as ${name}`);
                var chatBox = document.getElementById('chatBox');
                chatBox.innerHTML += `<p>You joined ${currentRoom}</p>`;
            } else {
                console.error('Room or name is undefined');
            }
        }

        socket.on('roomUsers', (users) => {
            var chatBox = document.getElementById('chatBox');
            if (!users.length || (users.length === 1 && users[0] === name)) {
                chatBox.innerHTML += '<p>You are the only one in this room</p>';
            } else {
                var usersList = '<p>Users in this room:</p><ul>';
                users.forEach((user) => {
                    usersList += `<li>${user}</li>`;
                });
                usersList += '</ul>';
                chatBox.innerHTML += usersList;
            }
        });

        function leaveRoom() {
            if (currentRoom && name) {
                socket.emit('leave', { room: currentRoom, name: name });
                console.log(`Left room: ${currentRoom}`);
                var chatBox = document.getElementById('chatBox');
                chatBox.innerHTML += `<p>You left ${currentRoom}</p>`;
                currentRoom = ''; // Reset currentRoom variable
            }
        }

        function emitTyping() {
            if (currentRoom) {
                socket.emit('typing', { room: currentRoom, name: name });
            }
        }

        function sendMessage() {
            var messageInput = document.getElementById('messageInput');
            var message = messageInput.value;
            socket.emit('message', { room: currentRoom, name: name, message: message });
            messageInput.value = '';
        }

        socket.on('typing', function (data) {
            var typingIndicator = document.getElementById('typingIndicator');
            typingIndicator.innerText = data;
            setTimeout(() => {
                typingIndicator.innerText = '';
            }, 3000);
        });

        socket.on('message', function (data) {
            var chatBox = document.getElementById('chatBox');
            var messageClass = data.name === name ? 'message sent' : 'message received';
            chatBox.innerHTML += `<div class="${messageClass}"><strong>${data.name}:</strong> ${data.message}</div>`;
        });
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var elems = document.querySelectorAll('select');
            var instances = M.FormSelect.init(elems);
        });
    </script>
</body>

</html>